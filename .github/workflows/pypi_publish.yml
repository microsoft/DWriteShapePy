# This is a basic workflow to help you get started with Actions

name: Build, Test and Publish

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - "v*"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-n-publish:
    # The type of runner that the job will run on
    runs-on: windows-2019
    
    env:
      CIBW_BUILD: cp37-win_amd64 cp38-win_amd64 cp39-win_amd64 cp310-win_amd64 cp311-win_amd64 cp312-win_amd64
      CIBW_ARCHS: AMD64
      CIBW_PLATFORM: windows
      CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7"
      CIBW_TEST_REQUIRES: pytest
      CIBW_TEST_COMMAND: "pytest {project}/tests"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
         # Version range or exact version of a Python version to use, using SemVer's version range syntax.
         python-version: "3.12"
         # The target architecture (x86, x64) of the Python interpreter.
         architecture: "x64"
         
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools
          pip install cibuildwheel
          pip install cython twine
          
      - name: Build Wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        
      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-artifact
          
      - name: Build Source Distribution 
        run: python setup.py sdist
          
      - name: Upload Source Distribution
        uses: actions/upload-artifact@v4
        with:
          path: ./dist/*.zip
          name: source-dist-artifact

  upload_pypi:
     needs: [build-n-publish]
     runs-on: ubuntu-latest
     environment:
      name: pypi
      url: https://pypi.org/p/dwriteshapepy  # Replace <package-name> with your PyPI project name
     permissions:
       id-token: write  # IMPORTANT: mandatory for trusted publishing
     if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
     steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-artifact
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: source-dist-artifact
          path: dist

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      
